/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.istoregui;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tiara Calista
 */
public class RiwayatPesanan extends javax.swing.JFrame {
    String connectionUrl = "jdbc:sqlserver://localhost:1433;databaseName=iStore;user=tiara;password=tiara;encrypt=true;trustServerCertificate=true;loginTimeout=30";
    ResultSet resultSet = null;
    Connection connection;
    Statement statement;
    PreparedStatement preparedStatement;
    private String userEmail;
    

    /**
     * Creates new form Transaksi
     */
    
    public RiwayatPesanan(String userEmail) {
        initComponents();
        this.userEmail = userEmail;
        showRecordPesanan();
        Runtime.getRuntime().addShutdownHook(new Thread(() -> closeDatabaseConnection()));
    }
    public void closeDatabaseConnection(){
            try {
            if (connection != null && !connection.isClosed()) {
                connection.close();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        }
   
   

  

    private int getIdPelangganByEmail(Connection connection, String emailPelanggan) throws SQLException {
    try (PreparedStatement preparedStatement = connection.prepareStatement("SELECT id_pelanggan FROM Pelanggan WHERE email_pelanggan = ?")) {
        preparedStatement.setString(1, emailPelanggan);
        try (ResultSet resultSet = preparedStatement.executeQuery()) {
            if (resultSet.next()) {
                return resultSet.getInt("id_pelanggan");
            }
        }
    }
    return -1;
}

private int getIdKeranjangByIdPelanggan(Connection connection, int idPelanggan) throws SQLException {
    try (PreparedStatement preparedStatement = connection.prepareStatement("SELECT id_keranjang FROM KepemilikanKeranjang WHERE id_pelanggan = ?")) {
        preparedStatement.setInt(1, idPelanggan);
        try (ResultSet resultSet = preparedStatement.executeQuery()) {
            if (resultSet.next()) {
                return resultSet.getInt("id_keranjang");
            }
        }
    }
    return -1; 
}

private int getIdPesananByIdKeranjang(Connection connection, int idPelanggan) throws SQLException {
    try (PreparedStatement preparedStatement = connection.prepareStatement("SELECT id_pesanan FROM Pesanan WHERE id_keranjang = ?")) {
        preparedStatement.setInt(1, idPelanggan);
        try (ResultSet resultSet = preparedStatement.executeQuery()) {
            if (resultSet.next()) {
                return resultSet.getInt("id_pesanan");
            }
        }
    }
    return -1; 
}



 public void showRecordPesanan() {
    try {
        connection = DriverManager.getConnection(connectionUrl);
        int idPelanggan = getIdPelangganByEmail(connection, userEmail);
        int idKeranjang = getIdKeranjangByIdPelanggan(connection, idPelanggan);
        int idPesanan = getIdPesananByIdKeranjang(connection, idKeranjang);

        String query = "SELECT PS.tanggal_pesanan, P.nama_produk, K.jumlah_produk, P.harga, K.sub_total, " +
                       "PS.total_harga_barang, PS.total_harga, " +
                       "PS.status_pembayaran, PG.status_pengiriman " +
                       "FROM Pesanan PS " +
                       "JOIN Keranjang K ON PS.id_keranjang = K.id_keranjang " +
                       "JOIN Produk P ON K.id_produk = P.id_produk " +
                       "JOIN Pengiriman PG ON PS.id_pengiriman = PG.id_pengiriman " +
                       "WHERE PS.id_pesanan = ?";

        preparedStatement = connection.prepareStatement(query);
        preparedStatement.setInt(1, idPesanan);

        resultSet = preparedStatement.executeQuery();

        ResultSetMetaData rsm = (ResultSetMetaData) resultSet.getMetaData();
        int n = rsm.getColumnCount();

        DefaultTableModel df = (DefaultTableModel) tabelPesanan.getModel();
        df.setRowCount(0);

        while (resultSet.next()) {
            Vector obj = new Vector();
            for (int i = 1; i <= n; i++) {
                obj.add(resultSet.getString(i));
            }
            df.addRow(obj);
        }
    } catch (SQLException ex) {
        System.out.println(ex);
    }
}



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        keranjang = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelPesanan = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        keranjang.setBackground(new java.awt.Color(45, 106, 79));
        keranjang.setPreferredSize(new java.awt.Dimension(900, 500));

        tabelPesanan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Tanggal Pesanan", "Produk", "Jumlah", "Harga", "Sub Total", "Total Harga Barang", "Total Harga", "Status Pembayaran", "Status Pengiriman"
            }
        ));
        jScrollPane1.setViewportView(tabelPesanan);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 38)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(45, 106, 79));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("RIWAYAT PESANAN");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(250, 250, 250)
                .addComponent(jLabel15)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout keranjangLayout = new javax.swing.GroupLayout(keranjang);
        keranjang.setLayout(keranjangLayout);
        keranjangLayout.setHorizontalGroup(
            keranjangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(keranjangLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 832, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        keranjangLayout.setVerticalGroup(
            keranjangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(keranjangLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(150, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(keranjang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 503, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(keranjang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

        
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RiwayatPesanan("adrian.johnson@email.com").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel15;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel keranjang;
    private javax.swing.JTable tabelPesanan;
    // End of variables declaration//GEN-END:variables

}
